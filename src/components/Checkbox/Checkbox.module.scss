$primary-color: #97bbff;
$disabled-color: #e0e0e0;
$default-border-color: #C0C0C0;
$border-color: #97bbff;
$hover-border-color: #97bbff;
$font-color: #C0C0C0;
$font-family: 'Arial', sans-serif;
$font-size: 15px;
$font-weight: 400;

@keyframes checkAnimation {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  40% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 1;
  }
  70% {
    transform: translate(-50%, -50%) scale(0.9);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes rippleEffect {
  0% {
    box-shadow: 0 0 0 0 rgba(151, 187, 255, 0.3);
    transform: scale(0.95);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(151, 187, 255, 0);
    transform: scale(1);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(151, 187, 255, 0);
    transform: scale(1);
  }
}

.checkbox {
  display: inline-flex;
  align-items: center;
  position: relative;
  user-select: none;

  &.focused:not(.disabled) .checkmark {
    box-shadow: 0 0 0 3px rgba(151, 187, 255, 0.3);
    border-color: $primary-color;
  }

  // disabled 상태일 때 부모 요소에 적용할 클래스
  &.disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  .input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    height: 0;
    width: 0;
    padding: 0;
    margin: 0;
    cursor: pointer;
  }

  // 체크 상태
  .input:checked + .label .checkmark {
    background-color: $primary-color;
    border-color: $primary-color;
    animation: rippleEffect 0.3s ease-out forwards;
  }

  .input:checked + .label .checkmark:after {
    background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='white'><path d='M20.285 6.709l-11.997 12-5.285-5.3 1.415-1.415 3.87 3.87L18.87 5.294z'/></svg>")
                    no-repeat center;

    transform: translate(-50%, -50%) scale(1);
    animation: checkAnimation 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
    opacity: 1;
  }

  // 체크되지 않은 상태
  .input:not(:checked) + .label .checkmark {
    background-color: white;
    border-color: $default-border-color;
    transition: all 0.15s ease-out;
  }

  .input:not(:checked) + .label .checkmark:after {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
    transition:
      transform 0.15s ease-out,
      opacity 0.15s ease-out;
  }

  // disabled 상태
  .input:disabled + .label .checkmark {
    background-color: $disabled-color;
    border-color: #bdbdbd;
  }

  .input:focus-visible + .label .checkmark {
    box-shadow: 0 0 0 3px rgba(151, 187, 255, 0.3);
    border-color: $primary-color;
  }

  &.small .checkmark {
    width: 12px;
    height: 12px;
  }

  &.medium .checkmark {
    margin-top: 3px;
    width: 16px;
    height: 16px;
  }

  &.large .checkmark {
    width: 20px;
    height: 20px;
  }

  &.small .label {
    font-size: 14px;
  }

  &.medium .label {
    font-size: 15px;
  }

  .checkmark {
    position: relative;
    display: inline-block;
    cursor: pointer;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    margin-right: 6px;
    padding: 2px;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    background-color: white;
    border: 1.5px solid $border-color;
    will-change: transform, box-shadow, background-color, border-color;
    background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='rgb(192%2C192%2C192)'><path d='M20.285 6.709l-11.997 12-5.285-5.3 1.415-1.415 3.87 3.87L18.87 5.294z'/></svg>") no-repeat center center;
    
    &:after {
      content: '';
      z-index: 1;
      position: absolute;
      top: 50%;
      left: 50%;
      width: 100%;
      height: 100%;
      transform: translate(-50%, -50%) scale(0);
      will-change: transform, opacity;
    }
  }

  .label {
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: $font-family;
    font-size: $font-size;
    font-weight: $font-weight;
    color: $font-color;
    vertical-align: middle;

    &:active .checkmark {
      transform: scale(0.95);
    }
  }
}
